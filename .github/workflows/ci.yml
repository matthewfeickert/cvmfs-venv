name: CI

on:
  push:
    # branches:
    # - main
  pull_request:
  workflow_dispatch:

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        venv-name: ["example"]
    container:
      image: gitlab-registry.cern.ch/atlas/athena/analysisbase:22.2.113
      # volumes:
      #  - ${{ github.workspace }}:/github-workspace
      # options: --workdir /workdir
      options: --user root
    env:
      HOME: /home/atlas
    defaults:
      run:
        shell: bash
        working-directory: /workdir

    steps:
      # AnalysisBase Git version is too old to use modern checkout action
    - uses: actions/checkout@v1

    - name: Check runtime information
      run: |
        echo "USER=${USER}"
        echo "CWD=$(pwd)"
        ls -lhtra
        # ls -lhtra /github-workspace
        echo "ls -lhtra /__w"
        ls -lhtra /__w
        ls -lhtra /__w/cvmfs-venv/cvmfs-venv
        # cp /github-workspace/* .
        cp -r /__w/cvmfs-venv/cvmfs-venv/cvmfs-venv.sh .
        echo "ls -lhtra:"
        ls -lhtra
        echo "env:"
        env
        echo "id:"
        id

    - name: Place ~/.local/bin on PATH
      run: |
        mkdir -p ~/.local/bin
        echo "PATH=$(readlink -f ~)/.local/bin:${PATH}" >> $GITHUB_ENV
        # Avoid warnings about cache ownership
        chown --recursive "$(id -u)" ~/

    - name: Install cvmfs-venv locally
      run: |
        echo "PATH=${PATH}"
        cp cvmfs-venv.sh ~/.local/bin/cvmfs-venv
        echo "cvmfs-venv is: $(command -v cvmfs-venv)"

    - name: Setup default venv using /release_setup.sh
      run: |
        . cvmfs-venv
        command -v python
        python --version --version
        echo "PATH=${PATH}"
        echo "PYTHONPATH=${PYTHONPATH}"

    - name: Remove default venv
      run: |
        rm -rf venv

    - name: Setup venv "${{ matrix.venv-name }}" using /release_setup.sh
      run: |
        . cvmfs-venv ${{ matrix.venv-name }}
        echo "# Python runtime: $(command -v python)"
        python --version --version

    - name: List installed Python packages
      run: |
        . /release_setup.sh
        . ${{ matrix.venv-name }}/bin/activate
        echo "# python -m pip list"
        python -m pip list
        echo "# python -m pip list --local"
        python -m pip list --local

    - name: Update NumPy and install Uproot
      run: |
        . /release_setup.sh
        . ${{ matrix.venv-name }}/bin/activate
        echo "# python -m pip install --upgrade numpy uproot"
        python -m pip install --upgrade numpy uproot
        echo "# python -m pip list"
        python -m pip list
        echo "# python -m pip list --local"
        python -m pip list --local

    - name: Deactivate environment
      run: |
        . /release_setup.sh
        . ${{ matrix.venv-name }}/bin/activate
        deactivate
        echo "# Python runtime: $(command -v python)"
        echo "PATH=${PATH}"
        echo "PYTHONPATH=${PYTHONPATH}"
        echo "# python -m pip list"
        python -m pip list

    - name: Reactivate environment
      run: |
        . /release_setup.sh
        . ${{ matrix.venv-name }}/bin/activate
        echo "PATH=${PATH}"
        echo "PYTHONPATH=${PYTHONPATH}"
        echo "# python -m pip list"
        python -m pip list
        echo "# python -m pip list --local"
        python -m pip list --local

    - name: Uninstall NumPy to demonstrate can
      run: |
        . /release_setup.sh
        . ${{ matrix.venv-name }}/bin/activate
        echo "# python -m pip uninstall -y numpy"
        python -m pip uninstall -y numpy
        echo "# python -m pip list"
        python -m pip list
        echo "# python -m pip list --local"
        python -m pip list --local

    - name: Remove venv "${{ matrix.venv-name }}"
      run: |
        rm -rf ${{ matrix.venv-name }}
